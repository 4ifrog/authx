# For deploying the application and its dependencies/databases as containers running within
# a network context. It calls the Dockerfile, which starts the application.

version: '3.7'

networks:
  default:
    name: authx-net
    driver: bridge

services:
  mongo:
    image: mongo:4.4.3-bionic
    hostname: mongo
    container_name: mongo
    restart: on-failure
    ports:
      - 27017:27017
    environment:
      MONGO_INITDB_ROOT_USERNAME: root      # Admin username
      MONGO_INITDB_ROOT_PASSWORD: password  # Admin password
      MONGO_INITDB_DATABASE: authx          # Database to create
    volumes:
      - ./db-scripts/create-user.js:/docker-entrypoint-initdb.d/create-user.js
      - ./db-scripts/setup-ttl.js:/docker-entrypoint-initdb.d/setup-ttl.js
    networks:
      - default
  authx:
    build:
      context: ..
      dockerfile: Dockerfile
    image: cybersamx/authx
    hostname: authx
    container_name: authx
    ports:
      - 8080:8080
    depends_on:
      - mongo
    volumes:
      - ./shell-scripts/wait-for-it.sh:/go/bin/wait-for-it.sh
    environment:
      - AX_PORT=8080
      - AX_MONGO_ADDR=mongodb://nobody:secrets@mongo:27017/authx
    command:
      - ./wait-for-it.sh
      - mongo:27017
      - --
      - ./authx
    networks:
      - default
  authx-e2e:
    build:
      context: ../e2e
    volumes:
      - ./shell-scripts/wait-for-it.sh:/usr/src/app/wait-for-it.sh
    stdin_open: true
    tty: true
    cap_add:
      - SYS_ADMIN
    image: cybersamx/authx-e2e
    hostname: authx-e2e
    container_name: authx-e2e
    depends_on:
      - authx
    environment:
      - AX_E2E_HOST_URL=http://authx:8080
    command:
      - ./wait-for-it.sh
      - authx:8080
      - --
      - npm
      - test
    networks:
      - default

# For testing the application and its dependencies/databases as containers running within
# a network context. It calls Dockerfile.test, which runs the integration tests.

version: '3.7'

networks:
  default:
    driver: bridge

services:
  mongo:
    image: mongo:4.4.3-bionic
    hostname: mongo
    container_name: mongo
    restart: on-failure
    # Disable logging - so that we can focus on the test logs
    logging:
      driver: none
    ports:
      - '27017:27017'
    environment:
      MONGO_INITDB_ROOT_USERNAME: root      # Admin usermame
      MONGO_INITDB_ROOT_PASSWORD: password  # Admin password
      MONGO_INITDB_DATABASE: authx          # Database to create
    volumes:
      - ./db-scripts/create-user.js:/docker-entrypoint-initdb.d/create-user.js
      - ./db-scripts/setup-ttl.js:/docker-entrypoint-initdb.d/setup-ttl.js
    networks:
      - default
  redis:
    image: redis:alpine
    hostname: redis
    container_name: redis
    restart: on-failure
    # Disable logging - so that we can focus on the test logs
    logging:
      driver: none
    ports:
      - '6379:6379'
    networks:
      - default
  authx:
    build:
      context: ..
      dockerfile: Dockerfile.test
    hostname: authx
    container_name: authx
    ports:
      - 8080:8080
    depends_on:
      - mongo
      - redis
    environment:
      - AX_PORT=8080
      - AX_MONGO_ADDR=mongodb://nobody:secrets@mongo:27017/authx
      - AX_REDIS_ADDR=redis:6379
    networks:
      - default
